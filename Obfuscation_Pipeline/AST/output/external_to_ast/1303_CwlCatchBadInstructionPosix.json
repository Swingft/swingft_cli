[
  {
    "A_name" : "callThreadExit",
    "B_kind" : "function",
    "C_accessLevel" : "private",
    "D_attributes" : [

    ],
    "F_location" : "CwlCatchBadInstructionPosix.swift - Line: 38, Column: 1",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ]
  },
  {
    "A_name" : "sigIllHandler",
    "B_kind" : "function",
    "C_accessLevel" : "private",
    "D_attributes" : [

    ],
    "F_location" : "CwlCatchBadInstructionPosix.swift - Line: 43, Column: 1",
    "G_members" : [
      {
        "A_name" : "rsp",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "CwlCatchBadInstructionPosix.swift - Line: 50, Column: 2",
        "H_initialValue" : "context.pointee.uc_mcontext64.pointee.__ss.__rsp"
      },
      {
        "A_name" : "f",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "CwlCatchBadInstructionPosix.swift - Line: 56, Column: 2",
        "H_initialValue" : "callThreadExit"
      }
    ],
    "I_parameterType" : [
      "Int32",
      "UnsafeMutablePointer<__siginfo>?",
      "UnsafeMutableRawPointer?"
    ],
    "I_parameters" : [
      "code",
      "info",
      "uap"
    ],
    "J_returnType" : "-> Void"
  },
  {
    "A_name" : "rsp",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "CwlCatchBadInstructionPosix.swift - Line: 50, Column: 2",
    "H_initialValue" : "context.pointee.uc_mcontext64.pointee.__ss.__rsp"
  },
  {
    "A_name" : "f",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "CwlCatchBadInstructionPosix.swift - Line: 56, Column: 2",
    "H_initialValue" : "callThreadExit"
  },
  {
    "A_name" : "BadInstructionException",
    "B_kind" : "class",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "CwlCatchBadInstructionPosix.swift - Line: 63, Column: 1",
    "G_members" : [

    ]
  },
  {
    "A_name" : "catchBadInstruction",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "CwlCatchBadInstructionPosix.swift - Line: 70, Column: 1",
    "G_members" : [
      {
        "A_name" : "sigActionPrev",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "CwlCatchBadInstructionPosix.swift - Line: 72, Column: 2",
        "H_initialValue" : "sigaction()"
      },
      {
        "A_name" : "action",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "CwlCatchBadInstructionPosix.swift - Line: 73, Column: 2",
        "H_initialValue" : "__sigaction_u(__sa_sigaction: sigIllHandler)"
      },
      {
        "A_name" : "sigActionNew",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "CwlCatchBadInstructionPosix.swift - Line: 74, Column: 2",
        "H_initialValue" : "sigaction(__sigaction_u: action, sa_mask: sigset_t(), sa_flags: SA_SIGINFO)"
      },
      {
        "A_name" : "b",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "CwlCatchBadInstructionPosix.swift - Line: 88, Column: 2",
        "H_initialValue" : "block"
      },
      {
        "A_name" : "caught",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "CwlCatchBadInstructionPosix.swift - Line: 89, Column: 2",
        "H_initialValue" : "withUnsafeMutablePointer(to: &b) { blockPtr in\n\t\t\/\/ Run the block on its own thread\n\t\tvar handlerThread: pthread_t? = nil\n\t\tlet e = pthread_create(&handlerThread, nil, { arg in\n\t\t\t(arg.assumingMemoryBound(to: (() -> Void).self).pointee)()\n\t\t\treturn nil\n\t\t}, blockPtr)\n\t\tprecondition(e == 0, \"Unable to create thread\")\n\n\t\t\/\/ Wait for completion and get the result. It will be either `nil` or bitPattern 1\n\t\tvar rawResult: UnsafeMutableRawPointer? = nil\n\t\tlet e2 = pthread_join(handlerThread!, &rawResult)\n\t\tprecondition(e2 == 0, \"Thread join failed\")\n\t\treturn Int(bitPattern: rawResult) != 0\n\t}"
      }
    ],
    "I_parameterType" : [
      "@escaping () -> Void"
    ],
    "I_parameters" : [
      "block"
    ],
    "J_returnType" : "-> BadInstructionException?"
  },
  {
    "A_name" : "sigActionPrev",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "CwlCatchBadInstructionPosix.swift - Line: 72, Column: 2",
    "H_initialValue" : "sigaction()"
  },
  {
    "A_name" : "action",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "CwlCatchBadInstructionPosix.swift - Line: 73, Column: 2",
    "H_initialValue" : "__sigaction_u(__sa_sigaction: sigIllHandler)"
  },
  {
    "A_name" : "sigActionNew",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "CwlCatchBadInstructionPosix.swift - Line: 74, Column: 2",
    "H_initialValue" : "sigaction(__sigaction_u: action, sa_mask: sigset_t(), sa_flags: SA_SIGINFO)"
  },
  {
    "A_name" : "b",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "CwlCatchBadInstructionPosix.swift - Line: 88, Column: 2",
    "H_initialValue" : "block"
  },
  {
    "A_name" : "caught",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "CwlCatchBadInstructionPosix.swift - Line: 89, Column: 2",
    "H_initialValue" : "withUnsafeMutablePointer(to: &b) { blockPtr in\n\t\t\/\/ Run the block on its own thread\n\t\tvar handlerThread: pthread_t? = nil\n\t\tlet e = pthread_create(&handlerThread, nil, { arg in\n\t\t\t(arg.assumingMemoryBound(to: (() -> Void).self).pointee)()\n\t\t\treturn nil\n\t\t}, blockPtr)\n\t\tprecondition(e == 0, \"Unable to create thread\")\n\n\t\t\/\/ Wait for completion and get the result. It will be either `nil` or bitPattern 1\n\t\tvar rawResult: UnsafeMutableRawPointer? = nil\n\t\tlet e2 = pthread_join(handlerThread!, &rawResult)\n\t\tprecondition(e2 == 0, \"Thread join failed\")\n\t\treturn Int(bitPattern: rawResult) != 0\n\t}"
  },
  {
    "A_name" : "handlerThread",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "CwlCatchBadInstructionPosix.swift - Line: 91, Column: 3",
    "H_initialValue" : "nil"
  },
  {
    "A_name" : "e",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "CwlCatchBadInstructionPosix.swift - Line: 92, Column: 3",
    "H_initialValue" : "pthread_create(&handlerThread, nil, { arg in\n\t\t\t(arg.assumingMemoryBound(to: (() -> Void).self).pointee)()\n\t\t\treturn nil\n\t\t}, blockPtr)"
  },
  {
    "A_name" : "rawResult",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "CwlCatchBadInstructionPosix.swift - Line: 99, Column: 3",
    "H_initialValue" : "nil"
  },
  {
    "A_name" : "e2",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "CwlCatchBadInstructionPosix.swift - Line: 100, Column: 3",
    "H_initialValue" : "pthread_join(handlerThread!, &rawResult)"
  }
]
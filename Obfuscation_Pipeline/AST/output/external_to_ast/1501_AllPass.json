[
  {
    "A_name" : "allPass",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "AllPass.swift - Line: 1, Column: 1",
    "G_members" : [
      {
        "A_name" : "matcher",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "AllPass.swift - Line: 4, Column: 5",
        "H_initialValue" : "Predicate.simpleNilable(\"pass a condition\") { actualExpression in\n        return PredicateStatus(bool: try passFunc(try actualExpression.evaluate()))\n    }"
      }
    ],
    "I_parameterType" : [
      "@escaping (S.Element?) throws -> Bool"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> Predicate<S>"
  },
  {
    "A_name" : "matcher",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "AllPass.swift - Line: 4, Column: 5",
    "H_initialValue" : "Predicate.simpleNilable(\"pass a condition\") { actualExpression in\n        return PredicateStatus(bool: try passFunc(try actualExpression.evaluate()))\n    }"
  },
  {
    "A_name" : "allPass",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "AllPass.swift - Line: 10, Column: 1",
    "G_members" : [
      {
        "A_name" : "matcher",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "AllPass.swift - Line: 14, Column: 5",
        "H_initialValue" : "Predicate.simpleNilable(passName) { actualExpression in\n        return PredicateStatus(bool: try passFunc(try actualExpression.evaluate()))\n    }"
      }
    ],
    "I_parameterType" : [
      "String",
      "@escaping (S.Element?) throws -> Bool"
    ],
    "I_parameters" : [
      "_",
      "_"
    ],
    "J_returnType" : "-> Predicate<S>"
  },
  {
    "A_name" : "matcher",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "AllPass.swift - Line: 14, Column: 5",
    "H_initialValue" : "Predicate.simpleNilable(passName) { actualExpression in\n        return PredicateStatus(bool: try passFunc(try actualExpression.evaluate()))\n    }"
  },
  {
    "A_name" : "allPass",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [
      "available"
    ],
    "F_location" : "AllPass.swift - Line: 20, Column: 1",
    "G_members" : [

    ],
    "I_parameterType" : [
      "M"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> Predicate<S>"
  },
  {
    "A_name" : "allPass",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "AllPass.swift - Line: 25, Column: 1",
    "G_members" : [

    ],
    "I_parameterType" : [
      "Predicate<S.Element>"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> Predicate<S>"
  },
  {
    "A_name" : "createPredicate",
    "B_kind" : "function",
    "C_accessLevel" : "private",
    "D_attributes" : [

    ],
    "F_location" : "AllPass.swift - Line: 29, Column: 1",
    "G_members" : [

    ],
    "I_parameterType" : [
      "Predicate<S.Element>"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> Predicate<S>"
  },
  {
    "A_name" : "failure",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "AllPass.swift - Line: 38, Column: 9",
    "H_initialValue" : ".expectedTo(\"all pass\")"
  },
  {
    "A_name" : "exp",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "AllPass.swift - Line: 40, Column: 13",
    "H_initialValue" : "Expression(\n                expression: {currentElement}, location: actualExpression.location)"
  },
  {
    "A_name" : "predicateResult",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "AllPass.swift - Line: 42, Column: 13",
    "H_initialValue" : "try elementMatcher.satisfies(exp)"
  },
  {
    "A_name" : "NMBPredicate",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "AllPass.swift - Line: 68, Column: 1",
    "G_members" : [
      {
        "A_name" : "allPassMatcher",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [
          "objc",
          "class"
        ],
        "F_location" : "AllPass.swift - Line: 69, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "NMBMatcher"
        ],
        "I_parameters" : [
          "_"
        ],
        "J_returnType" : "-> NMBPredicate"
      }
    ]
  },
  {
    "A_name" : "allPassMatcher",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [
      "objc",
      "class"
    ],
    "F_location" : "AllPass.swift - Line: 69, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "NMBMatcher"
    ],
    "I_parameters" : [
      "_"
    ],
    "J_returnType" : "-> NMBPredicate"
  },
  {
    "A_name" : "location",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "AllPass.swift - Line: 71, Column: 13",
    "H_initialValue" : "actualExpression.location"
  },
  {
    "A_name" : "actualValue",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "AllPass.swift - Line: 72, Column: 13",
    "H_initialValue" : "try actualExpression.evaluate()"
  },
  {
    "A_name" : "nsObjects",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "AllPass.swift - Line: 73, Column: 13",
    "H_initialValue" : "[NSObject]()"
  },
  {
    "A_name" : "collectionIsUsable",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "AllPass.swift - Line: 75, Column: 13",
    "H_initialValue" : "true"
  },
  {
    "A_name" : "generator",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "AllPass.swift - Line: 77, Column: 17",
    "H_initialValue" : "NSFastEnumerationIterator(value)"
  },
  {
    "A_name" : "expr",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "AllPass.swift - Line: 100, Column: 13",
    "H_initialValue" : "Expression(expression: ({ nsObjects }), location: location)"
  },
  {
    "A_name" : "pred",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "AllPass.swift - Line: 101, Column: 13",
    "H_initialValue" : "createPredicate(Predicate { expr in\n                if let predicate = matcher as? NMBPredicate {\n                    return predicate.satisfies(({ try expr.evaluate() }), location: expr.location).toSwift()\n                } else {\n                    let failureMessage = FailureMessage()\n                    let result = matcher.matches(\n                        \/\/ swiftlint:disable:next force_try\n                        ({ try! expr.evaluate() }),\n                        failureMessage: failureMessage,\n                        location: expr.location\n                    )\n                    let expectationMsg = failureMessage.toExpectationMessage()\n                    return PredicateResult(\n                        bool: result,\n                        message: expectationMsg\n                    )\n                }\n            })"
  },
  {
    "A_name" : "failureMessage",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "AllPass.swift - Line: 105, Column: 21",
    "H_initialValue" : "FailureMessage()"
  },
  {
    "A_name" : "result",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "AllPass.swift - Line: 106, Column: 21",
    "H_initialValue" : "matcher.matches(\n                        \/\/ swiftlint:disable:next force_try\n                        ({ try! expr.evaluate() }),\n                        failureMessage: failureMessage,\n                        location: expr.location\n                    )"
  },
  {
    "A_name" : "expectationMsg",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "AllPass.swift - Line: 112, Column: 21",
    "H_initialValue" : "failureMessage.toExpectationMessage()"
  }
]
[
  {
    "A_name" : "ErrorResult",
    "B_kind" : "enum",
    "C_accessLevel" : "private",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "DSL+Wait.swift - Line: 4, Column: 1",
    "G_members" : [
      {
        "A_name" : "exception",
        "B_kind" : "case",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "DSL+Wait.swift - Line: 5, Column: 10",
        "I_parameterType" : [
          "NSException"
        ],
        "I_parameters" : [
          "_"
        ]
      },
      {
        "A_name" : "error",
        "B_kind" : "case",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "DSL+Wait.swift - Line: 6, Column: 10",
        "I_parameterType" : [
          "Error"
        ],
        "I_parameters" : [
          "_"
        ]
      },
      {
        "A_name" : "none",
        "B_kind" : "case",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "DSL+Wait.swift - Line: 7, Column: 10",
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ]
      }
    ]
  },
  {
    "A_name" : "NMBWait",
    "B_kind" : "class",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [
      "NSObject"
    ],
    "F_location" : "DSL+Wait.swift - Line: 13, Column: 1",
    "G_members" : [
      {
        "A_name" : "until",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [
          "class"
        ],
        "F_location" : "DSL+Wait.swift - Line: 29, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [
          "DispatchTimeInterval",
          "FileString",
          "UInt",
          "@escaping (@escaping () -> Void) -> Void"
        ],
        "I_parameters" : [
          "timeout",
          "file",
          "line",
          "action"
        ]
      },
      {
        "A_name" : "throwableUntil",
        "B_kind" : "function",
        "C_accessLevel" : "internal",
        "D_attributes" : [
          "class"
        ],
        "F_location" : "DSL+Wait.swift - Line: 40, Column: 5",
        "G_members" : [
          {
            "A_name" : "awaiter",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "DSL+Wait.swift - Line: 45, Column: 13",
            "H_initialValue" : "NimbleEnvironment.activeInstance.awaiter"
          },
          {
            "A_name" : "leeway",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "DSL+Wait.swift - Line: 46, Column: 13",
            "H_initialValue" : "timeout.divided"
          },
          {
            "A_name" : "result",
            "B_kind" : "variable",
            "C_accessLevel" : "internal",
            "D_attributes" : [

            ],
            "F_location" : "DSL+Wait.swift - Line: 47, Column: 13",
            "H_initialValue" : "awaiter.performBlock(file: file, line: line) { (done: @escaping (ErrorResult) -> Void) throws -> Void in\n                DispatchQueue.main.async {\n                    let capture = NMBExceptionCapture(\n                        handler: ({ exception in\n                            done(.exception(exception))\n                        }),\n                        finally: ({ })\n                    )\n                    capture.tryBlock {\n                        do {\n                            try action {\n                                done(.none)\n                            }\n                        } catch let e {\n                            done(.error(e))\n                        }\n                    }\n                }\n            }.timeout(timeout, forcefullyAbortTimeout: leeway).wait(\"waitUntil(...)\", file: file, line: line)"
          }
        ],
        "I_parameterType" : [
          "DispatchTimeInterval",
          "FileString",
          "UInt",
          "@escaping (@escaping () -> Void) throws -> Void"
        ],
        "I_parameters" : [
          "timeout",
          "file",
          "line",
          "action"
        ]
      }
    ]
  },
  {
    "A_name" : "until",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [
      "objc",
      "class"
    ],
    "F_location" : "DSL+Wait.swift - Line: 18, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "TimeInterval",
      "FileString",
      "UInt",
      "@escaping (@escaping () -> Void) -> Void"
    ],
    "I_parameters" : [
      "timeout",
      "file",
      "line",
      "action"
    ]
  },
  {
    "A_name" : "until",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [
      "class"
    ],
    "F_location" : "DSL+Wait.swift - Line: 29, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "DispatchTimeInterval",
      "FileString",
      "UInt",
      "@escaping (@escaping () -> Void) -> Void"
    ],
    "I_parameters" : [
      "timeout",
      "file",
      "line",
      "action"
    ]
  },
  {
    "A_name" : "throwableUntil",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [
      "class"
    ],
    "F_location" : "DSL+Wait.swift - Line: 40, Column: 5",
    "G_members" : [
      {
        "A_name" : "awaiter",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "DSL+Wait.swift - Line: 45, Column: 13",
        "H_initialValue" : "NimbleEnvironment.activeInstance.awaiter"
      },
      {
        "A_name" : "leeway",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "DSL+Wait.swift - Line: 46, Column: 13",
        "H_initialValue" : "timeout.divided"
      },
      {
        "A_name" : "result",
        "B_kind" : "variable",
        "C_accessLevel" : "internal",
        "D_attributes" : [

        ],
        "F_location" : "DSL+Wait.swift - Line: 47, Column: 13",
        "H_initialValue" : "awaiter.performBlock(file: file, line: line) { (done: @escaping (ErrorResult) -> Void) throws -> Void in\n                DispatchQueue.main.async {\n                    let capture = NMBExceptionCapture(\n                        handler: ({ exception in\n                            done(.exception(exception))\n                        }),\n                        finally: ({ })\n                    )\n                    capture.tryBlock {\n                        do {\n                            try action {\n                                done(.none)\n                            }\n                        } catch let e {\n                            done(.error(e))\n                        }\n                    }\n                }\n            }.timeout(timeout, forcefullyAbortTimeout: leeway).wait(\"waitUntil(...)\", file: file, line: line)"
      }
    ],
    "I_parameterType" : [
      "DispatchTimeInterval",
      "FileString",
      "UInt",
      "@escaping (@escaping () -> Void) throws -> Void"
    ],
    "I_parameters" : [
      "timeout",
      "file",
      "line",
      "action"
    ]
  },
  {
    "A_name" : "awaiter",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "DSL+Wait.swift - Line: 45, Column: 13",
    "H_initialValue" : "NimbleEnvironment.activeInstance.awaiter"
  },
  {
    "A_name" : "leeway",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "DSL+Wait.swift - Line: 46, Column: 13",
    "H_initialValue" : "timeout.divided"
  },
  {
    "A_name" : "result",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "DSL+Wait.swift - Line: 47, Column: 13",
    "H_initialValue" : "awaiter.performBlock(file: file, line: line) { (done: @escaping (ErrorResult) -> Void) throws -> Void in\n                DispatchQueue.main.async {\n                    let capture = NMBExceptionCapture(\n                        handler: ({ exception in\n                            done(.exception(exception))\n                        }),\n                        finally: ({ })\n                    )\n                    capture.tryBlock {\n                        do {\n                            try action {\n                                done(.none)\n                            }\n                        } catch let e {\n                            done(.error(e))\n                        }\n                    }\n                }\n            }.timeout(timeout, forcefullyAbortTimeout: leeway).wait(\"waitUntil(...)\", file: file, line: line)"
  },
  {
    "A_name" : "capture",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "DSL+Wait.swift - Line: 49, Column: 21",
    "H_initialValue" : "NMBExceptionCapture(\n                        handler: ({ exception in\n                            done(.exception(exception))\n                        }),\n                        finally: ({ })\n                    )"
  },
  {
    "A_name" : "until",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [
      "objc",
      "class"
    ],
    "F_location" : "DSL+Wait.swift - Line: 88, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "FileString",
      "UInt",
      "@escaping (@escaping () -> Void) -> Void"
    ],
    "I_parameters" : [
      "_",
      "line",
      "action"
    ]
  },
  {
    "A_name" : "until",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [
      "class"
    ],
    "F_location" : "DSL+Wait.swift - Line: 96, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "FileString",
      "UInt",
      "@escaping (@escaping () -> Void) -> Void"
    ],
    "I_parameters" : [
      "_",
      "line",
      "action"
    ]
  },
  {
    "A_name" : "blockedRunLoopErrorMessageFor",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "DSL+Wait.swift - Line: 105, Column: 1",
    "G_members" : [

    ],
    "I_parameterType" : [
      "String",
      "DispatchTimeInterval"
    ],
    "I_parameters" : [
      "_",
      "leeway"
    ],
    "J_returnType" : "-> String"
  },
  {
    "A_name" : "waitUntil",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "DSL+Wait.swift - Line: 117, Column: 1",
    "G_members" : [

    ],
    "I_parameterType" : [
      "DispatchTimeInterval",
      "FileString",
      "UInt",
      "@escaping (@escaping () -> Void) -> Void"
    ],
    "I_parameters" : [
      "timeout",
      "file",
      "line",
      "action"
    ]
  }
]
[
  {
    "A_name" : "Int8",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [
      "ExpressibleByBooleanLiteral"
    ],
    "F_location" : "BeLogical.swift - Line: 3, Column: 1",
    "G_members" : [

    ]
  },
  {
    "A_name" : "init",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "BeLogical.swift - Line: 4, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "Bool"
    ],
    "I_parameters" : [
      "booleanLiteral"
    ]
  },
  {
    "A_name" : "UInt8",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [
      "ExpressibleByBooleanLiteral"
    ],
    "F_location" : "BeLogical.swift - Line: 9, Column: 1",
    "G_members" : [

    ]
  },
  {
    "A_name" : "init",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "BeLogical.swift - Line: 10, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "Bool"
    ],
    "I_parameters" : [
      "booleanLiteral"
    ]
  },
  {
    "A_name" : "Int16",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [
      "ExpressibleByBooleanLiteral"
    ],
    "F_location" : "BeLogical.swift - Line: 15, Column: 1",
    "G_members" : [

    ]
  },
  {
    "A_name" : "init",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "BeLogical.swift - Line: 16, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "Bool"
    ],
    "I_parameters" : [
      "booleanLiteral"
    ]
  },
  {
    "A_name" : "UInt16",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [
      "ExpressibleByBooleanLiteral"
    ],
    "F_location" : "BeLogical.swift - Line: 21, Column: 1",
    "G_members" : [

    ]
  },
  {
    "A_name" : "init",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "BeLogical.swift - Line: 22, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "Bool"
    ],
    "I_parameters" : [
      "booleanLiteral"
    ]
  },
  {
    "A_name" : "Int32",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [
      "ExpressibleByBooleanLiteral"
    ],
    "F_location" : "BeLogical.swift - Line: 27, Column: 1",
    "G_members" : [

    ]
  },
  {
    "A_name" : "init",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "BeLogical.swift - Line: 28, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "Bool"
    ],
    "I_parameters" : [
      "booleanLiteral"
    ]
  },
  {
    "A_name" : "UInt32",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [
      "ExpressibleByBooleanLiteral"
    ],
    "F_location" : "BeLogical.swift - Line: 33, Column: 1",
    "G_members" : [

    ]
  },
  {
    "A_name" : "init",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "BeLogical.swift - Line: 34, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "Bool"
    ],
    "I_parameters" : [
      "booleanLiteral"
    ]
  },
  {
    "A_name" : "Int64",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [
      "ExpressibleByBooleanLiteral"
    ],
    "F_location" : "BeLogical.swift - Line: 39, Column: 1",
    "G_members" : [

    ]
  },
  {
    "A_name" : "init",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "BeLogical.swift - Line: 40, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "Bool"
    ],
    "I_parameters" : [
      "booleanLiteral"
    ]
  },
  {
    "A_name" : "UInt64",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [
      "ExpressibleByBooleanLiteral"
    ],
    "F_location" : "BeLogical.swift - Line: 45, Column: 1",
    "G_members" : [

    ]
  },
  {
    "A_name" : "init",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "BeLogical.swift - Line: 46, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "Bool"
    ],
    "I_parameters" : [
      "booleanLiteral"
    ]
  },
  {
    "A_name" : "Float",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [
      "ExpressibleByBooleanLiteral"
    ],
    "F_location" : "BeLogical.swift - Line: 51, Column: 1",
    "G_members" : [

    ]
  },
  {
    "A_name" : "init",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "BeLogical.swift - Line: 52, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "Bool"
    ],
    "I_parameters" : [
      "booleanLiteral"
    ]
  },
  {
    "A_name" : "Double",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [
      "ExpressibleByBooleanLiteral"
    ],
    "F_location" : "BeLogical.swift - Line: 57, Column: 1",
    "G_members" : [

    ]
  },
  {
    "A_name" : "init",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "BeLogical.swift - Line: 58, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "Bool"
    ],
    "I_parameters" : [
      "booleanLiteral"
    ]
  },
  {
    "A_name" : "Int",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [
      "ExpressibleByBooleanLiteral"
    ],
    "F_location" : "BeLogical.swift - Line: 63, Column: 1",
    "G_members" : [

    ]
  },
  {
    "A_name" : "init",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "BeLogical.swift - Line: 64, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "Bool"
    ],
    "I_parameters" : [
      "booleanLiteral"
    ]
  },
  {
    "A_name" : "UInt",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [
      "ExpressibleByBooleanLiteral"
    ],
    "F_location" : "BeLogical.swift - Line: 69, Column: 1",
    "G_members" : [

    ]
  },
  {
    "A_name" : "init",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "BeLogical.swift - Line: 70, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [
      "Bool"
    ],
    "I_parameters" : [
      "booleanLiteral"
    ]
  },
  {
    "A_name" : "rename",
    "B_kind" : "function",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "BeLogical.swift - Line: 75, Column: 1",
    "G_members" : [

    ],
    "I_parameterType" : [
      "Predicate<T>",
      "ExpectationMessage"
    ],
    "I_parameters" : [
      "_",
      "failureMessage"
    ],
    "J_returnType" : "-> Predicate<T>"
  },
  {
    "A_name" : "result",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "BeLogical.swift - Line: 77, Column: 9",
    "H_initialValue" : "try matcher.satisfies(actualExpression)"
  },
  {
    "A_name" : "beTrue",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "BeLogical.swift - Line: 86, Column: 1",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ],
    "J_returnType" : "-> Predicate<Bool>"
  },
  {
    "A_name" : "beFalse",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "BeLogical.swift - Line: 92, Column: 1",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ],
    "J_returnType" : "-> Predicate<Bool>"
  },
  {
    "A_name" : "beTruthy",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "BeLogical.swift - Line: 99, Column: 1",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ],
    "J_returnType" : "-> Predicate<T>"
  },
  {
    "A_name" : "actualValue",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "BeLogical.swift - Line: 101, Column: 9",
    "H_initialValue" : "try actualExpression.evaluate()"
  },
  {
    "A_name" : "beFalsy",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [

    ],
    "F_location" : "BeLogical.swift - Line: 111, Column: 1",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ],
    "J_returnType" : "-> Predicate<T>"
  },
  {
    "A_name" : "actualValue",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "BeLogical.swift - Line: 113, Column: 9",
    "H_initialValue" : "try actualExpression.evaluate()"
  },
  {
    "A_name" : "NMBPredicate",
    "B_kind" : "extension",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "E_adoptedClassProtocols" : [

    ],
    "F_location" : "BeLogical.swift - Line: 122, Column: 1",
    "G_members" : [
      {
        "A_name" : "beTruthyMatcher",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [
          "objc",
          "class"
        ],
        "F_location" : "BeLogical.swift - Line: 123, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ],
        "J_returnType" : "-> NMBPredicate"
      },
      {
        "A_name" : "beFalsyMatcher",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [
          "objc",
          "class"
        ],
        "F_location" : "BeLogical.swift - Line: 130, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ],
        "J_returnType" : "-> NMBPredicate"
      },
      {
        "A_name" : "beTrueMatcher",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [
          "objc",
          "class"
        ],
        "F_location" : "BeLogical.swift - Line: 137, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ],
        "J_returnType" : "-> NMBPredicate"
      },
      {
        "A_name" : "beFalseMatcher",
        "B_kind" : "function",
        "C_accessLevel" : "public",
        "D_attributes" : [
          "objc",
          "class"
        ],
        "F_location" : "BeLogical.swift - Line: 144, Column: 5",
        "G_members" : [

        ],
        "I_parameterType" : [

        ],
        "I_parameters" : [

        ],
        "J_returnType" : "-> NMBPredicate"
      }
    ]
  },
  {
    "A_name" : "beTruthyMatcher",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [
      "objc",
      "class"
    ],
    "F_location" : "BeLogical.swift - Line: 123, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ],
    "J_returnType" : "-> NMBPredicate"
  },
  {
    "A_name" : "expr",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "BeLogical.swift - Line: 125, Column: 13",
    "H_initialValue" : "actualExpression.cast { ($0 as? NSNumber)?.boolValue ?? false }"
  },
  {
    "A_name" : "beFalsyMatcher",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [
      "objc",
      "class"
    ],
    "F_location" : "BeLogical.swift - Line: 130, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ],
    "J_returnType" : "-> NMBPredicate"
  },
  {
    "A_name" : "expr",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "BeLogical.swift - Line: 132, Column: 13",
    "H_initialValue" : "actualExpression.cast { ($0 as? NSNumber)?.boolValue ?? false }"
  },
  {
    "A_name" : "beTrueMatcher",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [
      "objc",
      "class"
    ],
    "F_location" : "BeLogical.swift - Line: 137, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ],
    "J_returnType" : "-> NMBPredicate"
  },
  {
    "A_name" : "expr",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "BeLogical.swift - Line: 139, Column: 13",
    "H_initialValue" : "actualExpression.cast { ($0 as? NSNumber)?.boolValue ?? false }"
  },
  {
    "A_name" : "beFalseMatcher",
    "B_kind" : "function",
    "C_accessLevel" : "public",
    "D_attributes" : [
      "objc",
      "class"
    ],
    "F_location" : "BeLogical.swift - Line: 144, Column: 5",
    "G_members" : [

    ],
    "I_parameterType" : [

    ],
    "I_parameters" : [

    ],
    "J_returnType" : "-> NMBPredicate"
  },
  {
    "A_name" : "expr",
    "B_kind" : "variable",
    "C_accessLevel" : "internal",
    "D_attributes" : [

    ],
    "F_location" : "BeLogical.swift - Line: 146, Column: 13",
    "H_initialValue" : "actualExpression.cast { value -> Bool? in\n                guard let value = value else { return nil }\n                return (value as? NSNumber)?.boolValue ?? false\n            }"
  }
]